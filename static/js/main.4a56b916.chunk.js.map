{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Statistics/Statistics.module.css","Components/FriendList/FriendList.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/image/preview.png","Components/Profile/Profile.js","Components/Statistics/Statistics.js","Components/FriendList/FriendList.js","Components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","css","profile","description","src","alt","width","item","label","quantity","followers","views","likes","defaultProp","defaultImage","Statistics","title","statistics","statList","map","id","percentage","style","backgroundColor","Math","random","toString","substr","FriendListItem","isOnline","online","offline","FriendList","friends","list","TransactionHistory","items","table","type","amount","currency","App","user","statisticalData","transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a56b916.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3V6T3\",\"description\":\"Profile_description__2xG8e\",\"avatar\":\"Profile_avatar__2rdqV\",\"name\":\"Profile_name__20Fg3\",\"tag\":\"Profile_tag__1uM-V\",\"stats\":\"Profile_stats__3bRaX\",\"item\":\"Profile_item__3LYHH\",\"quantity\":\"Profile_quantity__2Lh0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3dWK5\",\"title\":\"Statistics_title__1eFVR\",\"statList\":\"Statistics_statList__1GHui\",\"item\":\"Statistics_item__k9Xka\",\"percentage\":\"Statistics_percentage__1GncT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__3S9jQ\",\"item\":\"FriendList_item__34Tdn\",\"avatar\":\"FriendList_avatar__2pO7U\",\"status\":\"FriendList_status__z2cfY\",\"online\":\"FriendList_online__30V2g FriendList_status__z2cfY\",\"offline\":\"FriendList_offline__3p0Q0 FriendList_status__z2cfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__1aoCU\"};","export default __webpack_public_path__ + \"static/media/preview.c18b8089.png\";","import PropTypes from \"prop-types\";\r\nimport css from './Profile.module.css';\r\nimport defaultImage from \"../image/preview.png\";\r\n\r\nexport const Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={css.profile}>\r\n      <div className={css.description}>\r\n        <img src={avatar} alt={name} className={css.avatar} width={280} />\r\n        <p className={css.name}>{name}</p>\r\n        <p className={css.tag}>@{tag}</p>\r\n        <p className={location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={css.stats}>\r\n        <li className={css.item}>\r\n          <span className={css.label}>Followers </span>\r\n          <span className={css.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={css.item}>\r\n          <span className={css.label}>Views</span>\r\n          <span className={css.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={css.item}>\r\n          <span className={css.label}>Likes</span>\r\n          <span className={css.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProp = {\r\n  avatar: defaultImage,\r\n  stats: { followers: 0, views: 0, likes: 0 },\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};","import PropTypes from \"prop-types\";\r\nimport css from './Statistics.module.css';\r\n\r\nconst randomColor = () => \"#\" + Math.random().toString(16).substr(2, 6);\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n    return (\r\n        <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>Upload stats</h2>}\r\n\r\n      <ul className={css.statList}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            key={id}\r\n            className={css.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span className={css.label}>{label}</span>\r\n            <span className={css.percentage}>{ percentage }%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nStatistics.defaultProp = {\r\n  title: \" \",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};","import PropTypes from \"prop-types\";\r\nimport css from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={css.item}>\r\n      <span className={isOnline ? css.online : css.offline}></span>\r\n      <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={css.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport const FriendList = ({ friends }) => (\r\n  <ul className={css.list}>\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <FriendListItem\r\n        key={id}\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline={isOnline}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};","import PropTypes from \"prop-types\";\r\nimport css from './TransactionHistory.module.css';\r\n\r\nexport const TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={css.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\nimport { Profile } from './Components/Profile/Profile';\nimport user from './json/user.json';\nimport { Statistics } from './Components/Statistics/Statistics';\nimport statisticalData from './json/statistical-data.json';\nimport { FriendList } from './Components/FriendList/FriendList';\nimport friends from './json/friends.json';\nimport { TransactionHistory } from './Components/TransactionHistory/TransactionHistory';\nimport transaction from './json/transactions.json';\n\nconst App = () => (\n  <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload Stats\" stats={statisticalData} />\n     <FriendList friends={friends} />\n    <TransactionHistory items={transaction} /> \n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}